package cn.e3mall.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

import cn.e3mall.common.pojo.EasyUIDatagridResult;
import cn.e3mall.common.utils.E3Result;
import cn.e3mall.common.utils.IDUtils;
import cn.e3mall.mapper.TbItemMapper;
import cn.e3mall.pojo.TbItem;
import cn.e3mall.pojo.TbItemDesc;
import cn.e3mall.pojo.TbItemExample;
import cn.e3mall.service.ItemService;

/**
 * 商品管理Service
 * <p>
 * Title: ItemServiceImpl
 * </p>
 * <p>
 * Description:
 * </p>
 * <p>
 * Company: www.itcast.cn
 * </p>
 * 
 * @version 1.0
 */
@Service
public class ItemServiceImpl implements ItemService {

	@Autowired
	public TbItemMapper itemMapper;

	/**
	 * 
	 * @param itemID
	 * @return 根据id查询商品
	 */
	@Override
	public TbItem selectByID(Long itemID) {
		return itemMapper.selectByPrimaryKey(itemID);

		/**
		 * 较为复杂的方法
		 * 
		 * TbItemExample example = new TbItemExample(); 
		 * Criteria criteria =example.createCriteria(); 
		 * //设置查询条件 
		 * criteria.andIdEqualTo(itemId);
		 * //执行查询
		 *  List<TbItem> list = itemMapper.selectByExample(example); 
		 *  if(list != null && list.size() > 0) { 
		 *  	return list.get(0); 
		 *  } 
		 *  return null;
		 * 
		 */
	}

	/**
	 * 
	 * @param page
	 *            当前页
	 * @param rows
	 *            每页显示行数
	 * @return 带分页的list
	 * 
	 */
	@Override
	public EasyUIDatagridResult getItemList(int page, int rows) {
		PageHelper.startPage(page, rows);

		TbItemExample example = new TbItemExample();
		List<TbItem> list = itemMapper.selectByExample(example);
		PageInfo<TbItem> pageInfo = new PageInfo<>(list);

		EasyUIDatagridResult result = new EasyUIDatagridResult();
		result.setTotal(pageInfo.getTotal());// 每页多少条数据
		result.setRows(list);
		return result;
	}

	/**
	 * 添加商品 。需要往 两个表中添加数据
	 * item 
	 * itemdesc
	 */

	@Override
	public E3Result addItem(TbItem item, String desc) {
		//生成商品id
		long itemID = IDUtils.genItemId();
		//补全item的属性
		item.setId(itemID);
		//1-正常，2-下架，3-删除
		item.setStatus((byte)1);
		
		//生成时间，修改时间
		item.setCreated(new Date());
		item.setUpdated(new Date());
		
		//向表单插入数据 
		itemMapper.insert(item);
		
		//创建商品描述表的pojo对象
		TbItemDesc itemDesc = new TbItemDesc();
		
		//补全属性 
		itemDesc.setItemId(itemID);
		itemDesc.setItemDesc(desc);
		
		E3Result e3Result = new E3Result();

		return null;
	}

}
